#################################################################
## Darksky
#################################################################
- platform: darksky
  api_key: !secret darsky_api_key
  monitored_conditions:
    - summary
    - icon
    - nearest_storm_distance
    - precip_type
    - precip_intensity
    - precip_probability
    - temperature
    - wind_speed
    - cloud_cover
    - humidity
    - pressure
    - temperature_max
    - temperature_min
#################################################################
## Room Presence
#################################################################
#########User one
- platform: mqtt
  name: mqtt_room_user_one
  state_topic: !secret room_user_one_state_topic
  value_template: '{{ value_json.guesses[0].location }}'
#Rename sensor in frontend
- platform: template
  sensors:
    room_user_one:
      friendly_name: !secret user_one_name
      value_template: >-
        {% if is_state('sensor.mqtt_room_user_one', 'livingroom') %}
          Wohnzimmer
        {% elif is_state('sensor.mqtt_room_user_one', 'kitchen') %}
          Küche
        {% elif is_state('sensor.mqtt_room_user_one', 'studyroom') %}
          Arbeitszimmer
        {% elif is_state('sensor.mqtt_room_user_one', 'bedroom') %}
          Schlafzimmer
        {% elif is_state('sensor.mqtt_room_user_one', 'lower_bathroom') %}
          Bad unten
        {% elif is_state('sensor.mqtt_room_user_one', 'lowe_bathroom') %}
          Bad unten
        {% elif is_state('sensor.mqtt_room_user_one', 'upper_bathroom') %}
          Bad oben
        {% elif is_state('sensor.mqtt_room_user_one', 'upper_balcony') %}
          Balkon Oben
        {% elif is_state('sensor.mqtt_room_user_one', 'guest_room') %}
          Gästezimmer
        {% else %}
          Unbekannt
        {% endif %}
#########User two
- platform: mqtt
  name: mqtt_room_user_two
  state_topic: !secret room_user_two_state_topic
  value_template: '{{ value_json.guesses[0].location }}'
#Rename sensor in frontend
- platform: template
  sensors:
    room_user_two:
      friendly_name: !secret user_two_name
      value_template: >-
        {% if is_state('sensor.mqtt_room_user_two', 'livingroom') %}
          Wohnzimmer
        {% elif is_state('sensor.mqtt_room_user_two', 'kitchen') %}
          Küche
        {% elif is_state('sensor.mqtt_room_user_two', 'studyroom') %}
          Arbeitszimmer
        {% elif is_state('sensor.mqtt_room_user_two', 'bedroom') %}
          Schlafzimmer
        {% elif is_state('sensor.mqtt_room_user_two', 'lower_bathroom') %}
          Bad unten
        {% elif is_state('sensor.mqtt_room_user_two', 'lowe_bathroom') %}
          Bad unten
        {% elif is_state('sensor.mqtt_room_user_two', 'upper_bathroom') %}
          Bad oben
        {% elif is_state('sensor.mqtt_room_user_two', 'upper_balcony') %}
          Balkon Oben
        {% elif is_state('sensor.mqtt_room_user_two', 'guest_room') %}
          Gästezimmer
        {% else %}
          Unbekannt
        {% endif %}
#########S8Plus
- platform: mqtt
  name: mqtt_room_galaxys8
  state_topic: eifinger/location/galaxys8
  value_template: '{{ value_json.guesses[0].location }}'
#Rename sensor in frontend
- platform: template
  sensors:
    room_s8plus:
      friendly_name: S8-Plus
      value_template: >-
        {% if is_state('sensor.mqtt_room_galaxys8', 'livingroom') %}
          Wohnzimmer
        {% elif is_state('sensor.mqtt_room_galaxys8', 'kitchen') %}
          Küche
        {% elif is_state('sensor.mqtt_room_galaxys8', 'studyroom') %}
          Arbeitszimmer
        {% elif is_state('sensor.mqtt_room_galaxys8', 'bedroom') %}
          Schlafzimmer
        {% elif is_state('sensor.mqtt_room_galaxys8', 'lower_bathroom') %}
          Bad unten
        {% elif is_state('sensor.mqtt_room_galaxys8', 'lowe_bathroom') %}
          Bad unten
        {% elif is_state('sensor.mqtt_room_galaxys8', 'upper_bathroom') %}
          Bad oben
        {% elif is_state('sensor.mqtt_room_galaxys8', 'upper_balcony') %}
          Balkon Oben
        {% elif is_state('sensor.mqtt_room_galaxys8', 'guest_room') %}
          Gästezimmer
        {% else %}
          Unbekannt
        {% endif %}
#################################################################
## Sonoff
#################################################################
- platform: mqtt
  state_topic: "tele/sonoff_small_lamp/SENSOR"
  value_template: "{{ value_json['AM2301'].Temperature }}"
  name: 'Small Lamp Temperature'
  unit_of_measurement: '°C'
- platform: mqtt
  state_topic: "tele/sonoff_small_lamp/SENSOR"
  value_template: "{{ value_json['AM2301'].Humidity }}"
  name: 'Small Lamp Humidity'
  unit_of_measurement: '%'
- platform: mqtt
  state_topic: "tele/sonoff_small_lamp/SENSOR"
  value_template: "{{ value_json['AM2301'].Temperature }}"
  name: 'Large Lamp Temperature'
  unit_of_measurement: '°C'
- platform: mqtt
  state_topic: "tele/sonoff_small_lamp/SENSOR"
  value_template: "{{ value_json['AM2301'].Humidity }}"
  name: 'Large Lamp Humidity'
  unit_of_measurement: '%'
#################################################################
## Travel Times
#################################################################
#Google
#Work from Home
- platform: google_travel_time
  name: travel_time_work_from_home
  api_key: !secret google_maps_api_token
  origin: zone.home
  destination: zone.work
#Home from Work
- platform: google_travel_time
  name: travel_time_home_from_work
  api_key: !secret google_maps_api_token
  origin: zone.work
  destination: zone.home
#Elmo from Home
- platform: google_travel_time
  name: travel_time_elmo_from_home
  api_key: !secret google_maps_api_token
  origin: zone.home
  destination: zone.elmo
#Next Appointment
- platform: google_travel_time
  name: travel_time_next_appointment_location
  api_key: !secret google_maps_api_token
  origin: !secret device_user_one
  destination: sensor.cal_next_appointment_location_google_prepared
  options:
    arrival_time: sensor.cal_work_start_time
#compare with waze
- platform: google_travel_time
  name: travel_time_ikea_from_dom
  api_key: !secret google_maps_api_token
  origin: 49.999112, 8.273897
  destination: 50.058128, 8.371457

#Waze
- platform: waze_travel_time
  name: waze_travel_time_ikea_from_dom
  origin: 49.999112, 8.273897
  destination: 50.058128, 8.371457
  region: EU
#################################################################
## Next Appointment
#################################################################
- platform: template
  sensors:
    cal_next_appointment_title:
      friendly_name: Termin
      value_template: "{{ states.calendar.keifingergooglemailcom.attributes.message }}"
    cal_next_appointment_location:
      friendly_name: Ort
      value_template: "{{ states.calendar.keifingergooglemailcom.attributes.location }}"
    cal_next_appointment_location_google_prepared:
       value_template: '{% if is_state("sensor.cal_next_appointment_location","") %}{{ "47.641223,68.803727"}}{% else %}{{ states.calendar.keifingergooglemailcom.attributes.location }}{% endif %}' 
       friendly_name: Ort
    cal_next_appointment_start_time:
      friendly_name: Um
      value_template: "{{ states.calendar.keifingergooglemailcom.attributes.start_time }}"
    calc_leave_time:
       value_template: '{{ (as_timestamp(states.calendar.keifingergooglemailcom.attributes.start_time) - states("sensor.travel_time_next_appointment_location") | int *60  - (states("input_number.leave_time_offset") | int * 60)) | timestamp_custom("%Y-%m-%d %H:%M")}}'
       friendly_name: Losfahren
#################################################################
## Sun
#################################################################
- platform: template
  sensors:
    sunset_time:
      value_template: "{{ as_timestamp(states.sun.sun.attributes.next_setting) | timestamp_custom('%H:%M') }}"
      friendly_name: Sonnenuntergang
    sunrise_time:
      value_template: "{{ as_timestamp(states.sun.sun.attributes.next_rising) | timestamp_custom('%H:%M') }}"
      friendly_name: Sonnenaufgang
    solar_angle:
      value_template: "{{ states.sun.sun.attributes.elevation }}"
      friendly_name: Solar Angle
      unit_of_measurement: degrees
#################################################################
## Face Detection
#################################################################
- platform: template
  sensors:
    facebox_detection:
      friendly_name: 'Facebox Detection'
      value_template: '{{ states.image_processing.facebox_saved_images.attributes.faces[0]["name"].title}}'
#################################################################
## Power Usage
#################################################################
- platform: template
  sensors:
    ventilator_power_usage:
      friendly_name: Ventilator Verbrauch
      unit_of_measurement: 'W'
      value_template: "{{states.switch.ventilator.attributes.current_power_w}}"
- platform: template
  sensors:
    varzilseiner_power_usage:
      friendly_name: Varzilseiner Verbrauch
      unit_of_measurement: 'W'
      value_template: "{{states.switch.varzilseiner.attributes.current_power_w}}"
